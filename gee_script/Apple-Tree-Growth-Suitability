//Imports
var FF_IA = ee.Image("users/saraheb3/AFsuitability/FrostFree_IA"),
    FF_IL = ee.Image("users/saraheb3/AFsuitability/FrostFree_IL"),
    FF_IN = ee.Image("users/saraheb3/AFsuitability/FrostFree_IN"),
    FF_KS = ee.Image("users/saraheb3/AFsuitability/FrostFree_KS"),
    FF_MI = ee.Image("users/saraheb3/AFsuitability/FrostFree_MI"),
    FF_MN = ee.Image("users/saraheb3/AFsuitability/FrostFree_MN"),
    FF_MO = ee.Image("users/saraheb3/AFsuitability/FrostFree_MO"),
    FF_ND = ee.Image("users/saraheb3/AFsuitability/FrostFree_ND"),
    FF_NE = ee.Image("users/saraheb3/AFsuitability/FrostFree_NE"),
    FF_OH = ee.Image("users/saraheb3/AFsuitability/FrostFree_OH"),
    FF_SD = ee.Image("users/saraheb3/AFsuitability/FrostFree_SD"),
    FF_WI = ee.Image("users/saraheb3/AFsuitability/FrostFree_WI"),
    Drainage_IA = ee.Image("users/saraheb3/AFsuitability/Drainage_IA"),
    Drainage_IL = ee.Image("users/saraheb3/AFsuitability/Drainage_IL"),
    Drainage_IN = ee.Image("users/saraheb3/AFsuitability/Drainage_IN"),
    Drainage_KS = ee.Image("users/saraheb3/AFsuitability/Drainage_KS"),
    Drainage_MI = ee.Image("users/saraheb3/AFsuitability/Drainage_MI"),
    Drainage_MN = ee.Image("users/saraheb3/AFsuitability/Drainage_MN"),
    Drainage_MO = ee.Image("users/saraheb3/AFsuitability/Drainage_MO"),
    Drainage_ND = ee.Image("users/saraheb3/AFsuitability/Drainage_ND"),
    Drainage_NE = ee.Image("users/saraheb3/AFsuitability/Drainage_NE"),
    Drainage_OH = ee.Image("users/saraheb3/AFsuitability/Drainage_OH"),
    Drainage_SD = ee.Image("users/saraheb3/AFsuitability/Drainage_SD"),
    Drainage_WI = ee.Image("users/saraheb3/AFsuitability/Drainage_WI"),
    Agtiles = ee.Image("users/saraheb3/AgTileUS_MW");

//Code used to create assets for apple tree growth suitability for each Midwest state
var lis = ee.List(['Illinois', 'Indiana', 'Iowa', 'Kansas', 'Michigan', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota', 'Ohio', 'South Dakota', 'Wisconsin']); //North Central Region
var statename = 'Wisconsin';
var state = ee.FeatureCollection('FAO/GAUL/2015/level1').filter(ee.Filter.equals('ADM1_NAME', statename));
//var state = ee.FeatureCollection('FAO/GAUL/2015/level1').filter(ee.Filter.inList('ADM1_NAME', lis));

//Agricultural lands
//NASS Cropland Data Layer
var CDL = ee.ImageCollection('USDA/NASS/CDL')
                  .filter(ee.Filter.date('2022-01-01', '2023-01-01'))
                  .first().clip(state.geometry());
var cropLandcover = CDL.select('cropland');
var CDLcrops = cropLandcover.lte(61).or(cropLandcover.gte(205).and(cropLandcover.lte(209))).or((cropLandcover.gte(213)).and((cropLandcover.neq(215)).and(cropLandcover.neq(217)).and(cropLandcover.neq(218)).and(cropLandcover.neq(220)).and(cropLandcover.neq(223)))); //cultivated annual crops, not tree crops
var CDLpasture = cropLandcover.eq(176);
var CDLag = CDLcrops.or(CDLpasture);
var CDLtreecrops = (cropLandcover.gte(66).and(cropLandcover.lte(77))).or(cropLandcover.eq(204)).or(cropLandcover.gte(210).and(cropLandcover.lte(212))).or(cropLandcover.eq(215)).or(cropLandcover.eq(217)).or(cropLandcover.eq(218)).or(cropLandcover.eq(220)).or(cropLandcover.eq(223));
//Map.addLayer(cropLandcover, visualization254, 'Crop Landcover');
//Map.addLayer(CDLpasture.selfMask(),{palette:'orange'},'CDLpasture');
//Map.addLayer(CDLag.selfMask(),{palette:'orange'},'CDLag',false);
var ESA_WC = ee.ImageCollection('ESA/WorldCover/v200').first();
var ESA_WC_forests = ESA_WC.neq(10).selfMask();
//Map.addLayer(ESA_WC_forests);
var CDLag_mask = CDLag.updateMask(ESA_WC_forests);
var CDLpasture_mask = CDLpasture.updateMask(ESA_WC_forests);

//Riparian zones and field borders
var NHD_IL = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_IL/NHDFlowline');
var NHD_IN = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_IN/NHDFlowline');
var NHD_IA = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_IA/NHDFlowline');
var NHD_KS = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_KS/NHDFlowline');
var NHD_MI = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_MI/NHDFlowline');
var NHD_MN = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_MN/NHDFlowline');
var NHD_MO = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_MO/NHDFlowline');
var NHD_NE = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_NE/NHDFlowline');
var NHD_ND = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_ND/NHDFlowline');
var NHD_OH = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_OH/NHDFlowline');
var NHD_SD = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_SD/NHDFlowline');
var NHD_WI = ee.FeatureCollection('projects/sat-io/open-datasets/NHD/NHD_WI/NHDFlowline');

var NHD_state_img = NHD_WI.reduceToImage({
  properties: ['ObjectID'],
  reducer: ee.Reducer.first()
});

//Map.addLayer(NHD_Midwest.style({color: '2E5984'}),{},'NHD Flowline')
Map.addLayer(NHD_state_img,{},'NHD Flowline', false);
//print(NHD_Midwest_img);

var cost = ee.Image(1);
var dist2riparian = cost.cumulativeCost({source: NHD_state_img, 
    maxDistance:30, //Select distance parameter in meters. Here, we created data layer of populations within 5 km (5000 m) of forests.
    geodeticDistance: false}).add(1);

var visualization30 = {
  min: 0.0,
  max: 30.0,
  palette: ['24126c', '1fff4f', 'd4ff50']
};
//Map.addLayer(dist2riparian,visualization30,'dist2riparian');

var riparianAg = dist2riparian.mask(CDLag_mask).selfMask();
//Map.addLayer(riparianAg,visualization30,'riparianCDLAg');

var ones = ee.Image(1);
var riparianArea = ones.mask(riparianAg).selfMask();
Map.addLayer(riparianArea,visualization30,'riparianCDLarea');

//var riparianAg2 = CDLag.updateMask(dist2riparian).selfMask();
//Map.addLayer(riparianAg2,visualization,'riparianCDLAg');


Export.image.toAsset({
  image: riparianArea,
  description:'01Riparian_WI',
  scale:10,
  maxPixels:1e13,
  region: state.geometry()
});
